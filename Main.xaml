<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="962,3568" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="544,3363" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="2" Name="count" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="502,3271" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="C:\Users\S\Downloads\Casestudy4.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="468,3162" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="table" />
              <Variable x:TypeArguments="sd:DataTable" Name="phytable" />
              <Variable x:TypeArguments="sd:DataTable" Name="mathtable" />
              <Variable x:TypeArguments="sd:DataTable" Name="total" />
              <Variable x:TypeArguments="sd:DataTable" Name="l" />
              <Variable x:TypeArguments="x:String" Name="v" />
              <Variable x:TypeArguments="sd:DataTable" Name="total_table" />
              <Variable x:TypeArguments="sd:DataTable" Name="ch_table" />
              <Variable x:TypeArguments="sd:DataTable" Name="sum_table" />
              <Variable x:TypeArguments="sd:DataTable" Name="T" />
              <Variable x:TypeArguments="x:String" Name="Table2" />
              <Variable x:TypeArguments="sd:DataTable" Name="chem" />
              <Variable x:TypeArguments="sd:DataTable" Name="PH" />
              <Variable x:TypeArguments="sd:DataTable" Name="CG" />
              <Variable x:TypeArguments="sd:DataTable" Name="PP" />
              <Variable x:TypeArguments="sd:DataTable" Name="DC" />
              <Variable x:TypeArguments="sd:DataTable" Name="CSA" />
              <Variable x:TypeArguments="sd:DataTable" Name="CANS" />
              <Variable x:TypeArguments="sd:DataTable" Name="elective" />
              <Variable x:TypeArguments="sd:DataTable" Name="total_m" />
              <Variable x:TypeArguments="x:Int32" Name="r" />
              <Variable x:TypeArguments="x:Int32" Name="col" />
              <Variable x:TypeArguments="x:Int32" Name="p" />
              <Variable x:TypeArguments="x:Int32" Name="F" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[CG]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="426,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="A1:C53" SheetName="CG" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[CG]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="426,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Total" StartingCell="A1" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[PP]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="426,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" Range="C1:C53" SheetName="PP" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[PP]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="426,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Total" StartingCell="D1" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[DC]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="426,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="C1:C53" SheetName="DC" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[DC]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="426,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="Total" StartingCell="E1" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[CSA]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="426,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" Range="C1:C53" SheetName="CSA" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[CSA]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="426,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="Total" StartingCell="F1" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[CANS]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="426,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="C1:C53" SheetName="CANS" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[CANS]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="426,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Total" StartingCell="G1" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[elective]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="426,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" Range="C1:C53" SheetName="elective" />
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[elective]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="426,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_6" SheetName="Total" StartingCell="H1" />
            <ui:ExcelReadRange AddHeaders="True" DataTable="[total_m]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="426,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="C1:H53 " SheetName="Total" />
            <Assign sap:VirtualizedContainerService.HintSize="426,60" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">2</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEachRow CurrentIndex="[r]" DataTable="[total_m]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="426,1515" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,1368" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Double" Name="p_val" />
                      <Variable x:TypeArguments="x:Double" Name="ch_val" />
                      <Variable x:TypeArguments="x:Double" Name="m_val" />
                      <Variable x:TypeArguments="x:Double" Name="sum" />
                      <Variable x:TypeArguments="x:Double" Name="cgv" />
                      <Variable x:TypeArguments="x:Double" Name="ppv" />
                      <Variable x:TypeArguments="x:Double" Name="dcv" />
                      <Variable x:TypeArguments="x:Double" Name="csav" />
                      <Variable x:TypeArguments="x:Double" Name="cansv" />
                      <Variable x:TypeArguments="x:Double" Name="elv" />
                      <Variable x:TypeArguments="x:Double" Name="per" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Private: Assign" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">[sum]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(row.item("CS401"))+Convert.ToDouble(row.item("CS403"))+Convert.ToDouble(row.item("CS407"))+Convert.ToDouble(row.item("CS405"))+Convert.ToDouble(row.item("CS409"))+Convert.ToDouble(row.item("CS467/CS465"))]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">[per]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">[(sum/300)*100]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelWriteCell Cell="[&quot;I&quot;+count.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Total" Text="[sum.ToString]" />
                    <ui:ExcelWriteCell Cell="[&quot;I&quot;+count.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Total" Text="[sum.ToString]" />
                    <ui:ExcelWriteCell Cell="C54" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Total" Text="=AVERAGE(C2:C53)" />
                    <ui:ExcelWriteCell Cell="D54" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Total" Text="=AVERAGE(D2:D53)" />
                    <ui:ExcelWriteCell Cell="E54" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Total" Text="=AVERAGE(E2:E53)" />
                    <ui:ExcelWriteCell Cell="F54" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Total" Text="=AVERAGE(F2:F53)" />
                    <ui:ExcelWriteCell Cell="G54" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Total" Text="=AVERAGE(G2:G53)" />
                    <ui:ExcelWriteCell Cell="H54" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Total" Text="=AVERAGE(H2:H53)" />
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[count +1]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>